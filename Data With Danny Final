1.  What is the total amount each customer spent at the restaurant?
SELECT customer_id, SUM(menu.price)
FROM dannys_diner.sales 
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
GROUP BY customer_id;

2.  How many days has each customer visited the restaurant?
SELECT customer_id, COUNT(distinct order_date)
FROM dannys_diner.sales
GROUP BY customer_id;

3.  What was the first item from the menu purchased by each customer?
SELECT distinct customer_id, menu.product_name, sub.first_day
FROM dannys_diner.sales
JOIN 
(SELECT MIN(order_date) AS First_Day
FROM dannys_diner.sales) AS sub
ON sales.order_date=sub.first_day
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id;

4.  What is the most purchased item on the menu and how many times was it purchased by all customers?
SELECT COUNT(sales.product_id) AS times_purchased, product_name
FROM dannys_diner.sales
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
GROUP BY product_name
ORDER BY times_purchased DESC
LIMIT 1

5.  Which item was the most popular for each customer?
WITH sub AS 
(SELECT 
customer_id,
menu.product_name,
COUNT(sales.product_id) AS purchased,
RANK () OVER (
  PARTITION BY sales.product_id
  ORDER BY COUNT(sales.product_id) DESC
) AS item_rank
FROM dannys_diner.sales AS sales
JOIN dannys_diner.menu AS menu
ON sales.product_id=menu.product_id
GROUP BY customer_id, sales.product_id, menu.product_name)

SELECT customer_id, product_name, purchased
FROM sub
WHERE item_rank=1
ORDER BY customer_id;

6.  Which item was purchased first by the customer after they became a member?
SELECT sub.customer_id, product_name, First_order_as_member
FROM dannys_diner.sales
INNER JOIN 
(SELECT sales.customer_id, MIN(order_date) AS First_order_as_member
FROM dannys_diner.sales
JOIN dannys_diner.members
ON sales.customer_id=members.customer_id
WHERE order_date >= join_date
GROUP BY sales.customer_id) AS sub
ON sales.order_date=sub.First_order_as_member
AND sales.customer_id=sub.customer_id
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id

7.  Which item was purchased just before the customer became a member?
SELECT sub.customer_id, product_name, Last_order_before_member
FROM dannys_diner.sales
INNER JOIN 
(SELECT sales.customer_id, MAX(sales.order_date) AS Last_order_before_member
FROM dannys_diner.sales
JOIN dannys_diner.members
ON sales.customer_id=members.customer_id
WHERE sales.order_date < members.join_date
GROUP BY sales.customer_id) AS sub
ON sales.order_date=sub.Last_order_before_member
AND sales.customer_id=sub.customer_id
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id

8.  What is the total items and amount spent for each member before they became a member?
SELECT sales.customer_id AS Customer, COUNT(Distinct sales.product_id) AS Unique_Quantity, SUM(price) AS Total_Spent
FROM dannys_diner.sales
JOIN dannys_diner.members
ON sales.customer_id=members.customer_id
JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
WHERE order_date < join_date
GROUP BY sales.customer_id;

9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
WITH sub AS (SELECT product_id, 
CASE
WHEN product_name = 'sushi' THEN 2*10*price
ELSE 10*price
END AS Points
FROM dannys_diner.menu)

SELECT customer_id, SUM(sub.points) AS total_points
FROM sub
JOIN dannys_diner.sales
ON sub.product_id=sales.product_id
GROUP BY customer_id
ORDER BY total_points DESC;

10.  In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
WITH sub AS (SELECT sales.customer_id, sales.order_date, members.join_date, menu.product_id, 
CASE
WHEN product_name = 'sushi' THEN 2*10*price
WHEN product_name = 'ramen' AND order_date BETWEEN join_date AND join_date+6 THEN 2*10*price
WHEN product_name = 'curry' AND order_date BETWEEN join_date AND join_date+6 THEN 2*10*price
ELSE 10*price
END AS Points
FROM dannys_diner.menu
JOIN dannys_diner.sales
ON menu.product_id=sales.product_id
JOIN dannys_diner.members
ON sales.customer_id=members.customer_id)

SELECT customer_id, SUM(points) AS Total_Points
FROM sub
GROUP BY customer_id

Bonus Question 1:
Recreate the following table output using the available data:

WITH sub AS (
SELECT sales.customer_id, sales.order_date, menu.product_name, menu.price, 
CASE
WHEN order_date>join_date THEN 'Y'
ELSE 'N'
END AS Membership
FROM dannys_diner.sales
FULL JOIN dannys_diner.menu
ON sales.product_id=menu.product_id
FULL JOIN dannys_diner.members
ON sales.customer_id=members.customer_id)

SELECT *
FROM sub;

Bonus Question 2:


