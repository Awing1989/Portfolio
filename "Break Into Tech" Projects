For this project I am querying a dataset about movies and TV shows.

1. How many movie titles are there in the database? (movies only, not tv shows)
SELECT COUNT (title)
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" 
WHERE type='Movie';

2. When was the most recent batch of tv shows and/or movies added to the database?
SELECT date_added
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" 
GROUP BY date_added
ORDER BY date_added asc;

3. List all the movies and tv shows in alphabetical order.
SELECT title
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" 
GROUP BY title
ORDER BY title asc;

4. Who was the Director for the movie Bright Star?
SELECT title.title, people.director
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" title
JOIN "CharlotteChaze/BreakIntoTech"."netflix_people" people
on title.show_id=people.show_id
WHERE title.title='Bright Star';

5. What is the oldest movie in the database and what year was it made?
SELECT *
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type='Movie'
ORDER BY release_year asc
Limit(1);

"Break Into Tech" Monthly Sales Project:

1.  How many orders were placed in January? 
SELECT COUNT(orderID) 
FROM JanSales
WHERE LENGTH(orderID)=6
AND OrderID<>'Order ID';

2.  How many of those orders were for an iPhone?
SELECT COUNT(orderID) 
FROM JanSales
WHERE Product='iPhone'
AND LENGTH(orderID)=6
AND OrderID<>'Order ID';

3.  Select the customer account numbers for all the orders that were placed in February.
SELECT distinct cus.acctnum
FROM FebSales AS Feb
JOIN customers AS cus
ON Feb.orderID=cus.order_id
WHERE LENGTH(orderID)=6
AND OrderID<>'Order ID';

4.  Which product was the cheapest one sold in January, and what was the price?
SELECT *, min(price)
FROM JanSales
WHERE LENGTH(orderID)=6
AND OrderID<>'Order ID';

5.  What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT product, ROUND(SUM(quantity)*price) AS Revenue
FROM JanSales
WHERE LENGTH(orderID)=6
AND OrderID<>'Order ID'
GROUP BY product;

6.  Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, quantity, SUM(quantity)*price
FROM FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
AND LENGTH(OrderID)=6;

7.  How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct acctnum), AVG(quantity*price)
FROM FebSales AS Feb
INNER JOIN customers AS cus
ON Feb.orderID=cus.order_id
WHERE quantity>2
AND LENGTH(OrderID)=6;

8.  List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product, quantity
FROM FebSales AS Feb
WHERE location LIKE '%Los Angeles%';

"Break Into Tech" Final Project:

1.  Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT FirstName, LastName, customerID, country 
FROM customers 
WHERE country<>'USA';

2.  Show only the Customers from Brazil.
SELECT FirstName, LastName, customerID, country 
FROM customers 
WHERE country='Brazil';

3.  Find the Invoices of customers who are from Brazil. 
SELECT FirstName, LastName, n.InvoiceId, n.InvoiceDate, n.billingcountry
FROM customers AS c
FULL JOIN invoices AS n
ON c.CustomerId=n.CustomerId
WHERE country='Brazil';

4.  Show the Employees who are Sales Agents.
SELECT FirstName, Lastname, Title
FROM employees
WHERE Title='Sales Support Agent';

5.  Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct billingcountry AS 'Distinct Countries Billed In'
FROM invoices;

6.  Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT e.FirstName, e.LastName, n.*
FROM employees AS e
FULL JOIN customers AS c
ON c.SupportRepId=e.EmployeeId
FULL JOIN invoices AS n
ON n.CustomerId=c.CustomerId;

7.  Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT n.Total, c.FirstName, c.LastName, c.Country, e.FirstName, e.LastName
FROM employees AS e
FULL JOIN customers AS c
ON c.SupportRepId=e.EmployeeId
FULL JOIN invoices AS n
ON n.CustomerId=c.CustomerId
WHERE e.Title='Sales Support Agent';

8.  How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

9.  What are the total sales for 2009?
SELECT ROUND(SUM(total)) AS 'Total Sales' 
FROM invoices;

10. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.name, n.TrackId
FROM invoice_items AS n
FULL OUTER JOIN tracks AS t
ON n.TrackId=t.TrackId

11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT n.InvoiceId, t.Name, a.name
FROM invoice_items AS n
FULL OUTER JOIN tracks AS t
ON n.TrackId=t.TrackId
FULL OUTER JOIN albums AS al
ON al.albumid=t.trackID
FULL OUTER JOIN artists AS a
ON a.ArtistId=al.ArtistId

12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.name AS 'Track Name', al.Title AS 'Album Title', mt.Name AS 'Media Type', g.Name AS 'Genre'
FROM tracks AS t
JOIN albums AS al
ON t.AlbumId=al.AlbumId
JOIN media_types AS mt
ON mt.MediaTypeId=t.MediaTypeId
JOIN genres as g
ON g.GenreId=t.GenreId

13. Show the total sales made by each sales agent.
SELECT e.FirstName, e.LastName, ROUND(SUM(n.total)) AS 'Total Sales'
FROM employees AS e
JOIN customers AS c
ON e.EmployeeId=c.SupportRepId
JOIN invoices AS n
ON c.CustomerId=n.customerID
WHERE e.Title='Sales Support Agent'
GROUP BY e.LastName;

14. Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName, e.LastName, ROUND(SUM(n.total)) AS 'Total Sales'
FROM employees AS e
JOIN customers AS c
ON e.EmployeeId=c.SupportRepId
JOIN invoices AS n
ON c.CustomerId=n.customerID
WHERE invoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
AND e.Title='Sales Support Agent'
GROUP BY e.LastName
