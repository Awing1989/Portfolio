To better learn SQL, I did an 8 week challange at 'https://www.db-fiddle.com/f/2rM8RAnq7h5LLDTzZiRWcd/138'.  Here are my answers:

1.  What is the total amount each customer spent at the restaurant?

SELECT SUM(menu.price), sales.customer_id
FROM dannys_diner.menu AS menu
FULL OUTER JOIN dannys_diner.sales AS sales
ON menu.product_id=sales.product_id
GROUP BY sales.customer_id;

2.  How many days has each customer visited the restaurant?

SELECT COUNT(sales.order_date), sales.customer_id
FROM dannys_diner.menu AS menu
FULL OUTER JOIN dannys_diner.sales AS sales
ON menu.product_id=sales.product_id
GROUP BY sales.customer_id;

3.  What was the first item from the menu purchased by each customer?

SELECT menu.product_name, MIN(sales.order_date), sales.customer_id
FROM dannys_diner.menu AS menu
FULL OUTER JOIN dannys_diner.sales AS sales
ON menu.product_id=sales.product_id
GROUP BY sales.customer_id, menu.product_name;

4.  What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT COUNT(sales.product_id), menu.product_name
FROM dannys_diner.menu AS menu
FULL OUTER JOIN dannys_diner.sales AS sales
ON menu.product_id=sales.product_id
GROUP BY menu.product_name
LIMIT 1;

5.  Which item was the most popular for each customer?

SELECT MAX(product_id), customer_id
FROM dannys_diner.sales
WHERE product_id IN
(SELECT COUNT(product_id)
FROM dannys_diner.sales
GROUP BY product_id)
GROUP BY customer_id;

6.  Which item was purchased first by the customer after they became a member?

SELECT sales.customer_id, menu.product_id, MIN(sales.order_date)
FROM dannys_diner.sales AS sales
FULL OUTER JOIN dannys_diner.members AS members
ON sales.customer_id=members.customer_id
FULL OUTER JOIN dannys_diner.menu AS menu
ON sales.product_id=menu.product_id
WHERE sales.order_date >=members.join_date
AND sales.customer_id = 'A'
GROUP BY sales.customer_id, menu.product_id
LIMIT 1;

SELECT sales.customer_id, menu.product_id, MIN(sales.order_date)
FROM dannys_diner.sales AS sales
FULL OUTER JOIN dannys_diner.members AS members
ON sales.customer_id=members.customer_id
FULL OUTER JOIN dannys_diner.menu AS menu
ON sales.product_id=menu.product_id
WHERE sales.order_date >=members.join_date
AND sales.customer_id = 'B'
GROUP BY sales.customer_id, menu.product_id
LIMIT 1;

7.  Which item was purchased just before the customer became a member?

SELECT sales.customer_id, menu.product_id, MAX(sales.order_date)
FROM dannys_diner.sales AS sales
FULL OUTER JOIN dannys_diner.members AS members
ON sales.customer_id=members.customer_id
FULL OUTER JOIN dannys_diner.menu AS menu
ON sales.product_id=menu.product_id
WHERE sales.order_date <=members.join_date
AND sales.customer_id = 'A'
GROUP BY sales.customer_id, menu.product_id
LIMIT 1;

SELECT sales.customer_id, menu.product_id, MAX(sales.order_date)
FROM dannys_diner.sales AS sales
FULL OUTER JOIN dannys_diner.members AS members
ON sales.customer_id=members.customer_id
FULL OUTER JOIN dannys_diner.menu AS menu
ON sales.product_id=menu.product_id
WHERE sales.order_date <=members.join_date
AND sales.customer_id = 'B'
GROUP BY sales.customer_id, menu.product_id
LIMIT 1;

8.  What is the total items and amount spent for each member before they became a member?

SELECT COUNT(menu.product_id) AS Quantity_Ordered, SUM(menu.price) AS Amount_Spent
FROM dannys_diner.sales AS sales
FULL OUTER JOIN dannys_diner.members AS members
ON sales.customer_id=members.customer_id
FULL OUTER JOIN dannys_diner.menu AS menu
ON sales.product_id=menu.product_id
WHERE sales.order_date<members.join_date
GROUP BY sales.customer_id;

9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

10.  In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
