A. High Level Sales Analysis
1.  What was the total quantity sold for all products?
SELECT SUM(qty) AS Total_Quantity
FROM balanced_tree.sales;

2.  What is the total generated revenue for all products before discounts?
SELECT SUM(qty*price) AS Total_Revenue
FROM balanced_tree.sales;

3.  What was the total discount amount for all products?
SELECT SUM(qty*price*discount)
FROM balanced_tree.sales
WHERE discount != 0;

B. Transaction Analysis
1.  How many unique transactions were there?
SELECT COUNT(distinct txn_id)
FROM balanced_tree.sales

2.  What is the average unique products purchased in each transaction?
SELECT AVG(Prod_Count) 
FROM 
(SELECT COUNT(distinct prod_id) AS Prod_Count, txn_id 
FROM balanced_tree.sales
GROUP BY txn_id);

3.  What are the 25th, 50th and 75th percentile values for the revenue per transaction?
WITH sub AS (SELECT SUM(qty*price) AS revenue, txn_id
FROM balanced_tree.sales
GROUP BY txn_id)

SELECT
  percentiles[offset(25)] as p25,
  percentiles[offset(50)] as p50,
  percentiles[offset(75)] as p75,
  FROM (
  select approx_quantiles(revenue, 100) percentiles
  from sub);

4.  What is the average discount value per transaction?
WITH sub AS 
(SELECT txn_id, SUM(qty*price*discount*0.01) AS Total_Discount
FROM balanced_tree.sales
GROUP BY txn_id)

SELECT ROUND(AVG(total_discount)) AS avg_discount
FROM sub

5.  What is the percentage split of all transactions for members vs non-members?
WITH sub AS (SELECT member, COUNT(distinct txn_id) AS Txn_Count
FROM balanced_tree.sales
GROUP BY member)

SELECT member, 
ROUND (100 * txn_count / SUM(txn_count) OVER () ) As percentage
FROM sub

6.  What is the average revenue for member transactions and non-member transactions?
WITH sub AS (SELECT member, txn_id, SUM(qty*price) AS Revenue
FROM balanced_tree.sales
GROUP BY member, txn_id)

SELECT member, ROUND(AVG(revenue), 2)
FROM sub
GROUP BY member;

C. Product Analysis
1.  What are the top 3 products by total revenue before discount?
SELECT prod_id, product_name, SUM(qty*sales.price) AS revenue
FROM balanced_tree.sales AS sales
FULL JOIN balanced_tree.product_details AS pd
ON sales.prod_id=pd.product_id
GROUP BY product_name, prod_id
ORDER BY revenue DESC
LIMIT 3;

2.  What is the total quantity, revenue and discount for each segment?
SELECT segment_id, segment_name, SUM(qty) AS Total_Quantity, SUM(qty*sales.price) AS Revenue, SUM(qty*sales.price*discount) AS total_discount
FROM balanced_tree.sales AS sales
FULL JOIN balanced_tree.product_details AS pd
ON sales.prod_id=pd.product_id
GROUP BY segment_id, segment_name
ORDER BY revenue DESC

3.  What is the top selling product for each segment?

What is the total quantity, revenue and discount for each category?
What is the top selling product for each category?
What is the percentage split of revenue by product for each segment?
What is the percentage split of revenue by segment for each category?
What is the percentage split of total revenue by category?
What is the total transaction “penetration” for each product? (hint: penetration = number of transactions where at least 1 quantity of a product was purchased divided by total number of transactions)
What is the most common combination of at least 1 quantity of any 3 products in a 1 single transaction?
